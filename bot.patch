 (cd "$(git rev-parse --show-toplevel)" && git apply --3way <<'EOF' 
diff --git a/assets/floater/floater/enemy_base.lua b/assets/floater/floater/enemy_base.lua
index 6c49547be5a2589227ae1c3e1dd2ae32fbe900d7..f3ce1f0f792a9526300692e46de53301102e471d 100644
--- a/assets/floater/floater/enemy_base.lua
+++ b/assets/floater/floater/enemy_base.lua
@@ -1,30 +1,34 @@
 local EnemyBase = {}
 
 function EnemyBase.init(enemy, config)
     enemy._states = config.states or {}
     enemy._current_state = nil
     enemy.frame_counter = 0
 
     function enemy:set_state(name)
         local state = enemy._states[name]
         if not state then return end
         if enemy._current_state and enemy._current_state.exit then
             enemy._current_state.exit(enemy)
         end
         enemy._current_state = state
         enemy.frame_counter = 0
         if state.enter then state.enter(enemy) end
     end
 
+    if config.start_state then
+        enemy:set_state(config.start_state)
+    end
+
     enemy.update_func = function(self)
         self.frame_counter = self.frame_counter + 1
         if not self._current_state and config.start_state then
             self:set_state(config.start_state)
         end
         if self._current_state and self._current_state.update then
             self._current_state.update(self, self.frame_counter)
         end
     end
 end
 
 return EnemyBase
diff --git a/scripts/enemy_Base.lua b/scripts/enemy_Base.lua
index 658a647ebd9253e354a6763b2136e69876fc22bc..3b702cd5f9d9a7f5352ddb60244a5dabfbb01958 100644
--- a/scripts/enemy_Base.lua
+++ b/scripts/enemy_Base.lua
@@ -1,30 +1,34 @@
 local EnemyBase = {}
 
 function EnemyBase.init(enemy, config)
     enemy._states = config.states or {}
     enemy._current_state = nil
     enemy.frame_counter = 0
 
     function enemy:set_state(name)
         local state = enemy._states[name]
         if not state then return end
         if enemy._current_state and enemy._current_state.exit then
             enemy._current_state.exit(enemy)
         end
         enemy._current_state = state
         enemy.frame_counter = 0
         if state.enter then state.enter(enemy) end
     end
 
-    enemy.update_func = function(self)
-        self.frame_counter = self.frame_counter + 1
-        if not self._current_state and config.start_state then
-            self:set_state(config.start_state)
-        end
-        if self._current_state and self._current_state.update then
-            self._current_state.update(self, self.frame_counter)
-        end
-    end
-end
+    if config.start_state then
+        enemy:set_state(config.start_state)
+    end
+
+    enemy.update_func = function(self)
+        self.frame_counter = self.frame_counter + 1
+        if not self._current_state and config.start_state then
+            self:set_state(config.start_state)
+        end
+        if self._current_state and self._current_state.update then
+            self._current_state.update(self, self.frame_counter)
+        end
+    end
+end
 
 return EnemyBase
 
EOF
)